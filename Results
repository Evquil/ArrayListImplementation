Test the ArrayList implementation
Add 1,...,9
9 elements: {1,2,3,4,5,6,7,8,9}
Make a copy of the list
copy=9 elements: {1,2,3,4,5,6,7,8,9}
the list and the copy are the same: true
Change the copy (remove element at position 4 and add 18)
copy=9 elements: {1,2,3,4,6,7,8,9,18}
the list and the copy are the same: false
Could remove 10=false
add 21 at position 5
print the list (using get)
10 elements: {1,2,3,4,5,21,6,7,8,9}
5 has index 4
34 has index -1

Clear the list
the list is empty=true
0 element: {}
the list contains 3=false

Add to the list: 1,null,2,3
4 elements: {1,null,2,3}
The index of null=1
The index of 1=0

Remove the element at position 0 until the list is empty
3 elements: {null,2,3}
2 elements: {2,3}
1 element: {3}
0 element: {}

A new list: 0,1,...,10
11 elements: {0,1,2,3,4,5,6,7,8,9,10}
Remove the last element
10 elements: {0,1,2,3,4,5,6,7,8,9}
Add 100
11 elements: {0,1,2,3,4,5,6,7,8,9,100}
clear the list one element at a time with an iterator
10 elements: {1,2,3,4,5,6,7,8,9,100}
9 elements: {2,3,4,5,6,7,8,9,100}
8 elements: {3,4,5,6,7,8,9,100}
7 elements: {4,5,6,7,8,9,100}
6 elements: {5,6,7,8,9,100}
5 elements: {6,7,8,9,100}
4 elements: {7,8,9,100}
3 elements: {8,9,100}
2 elements: {9,100}
1 element: {100}
0 element: {}
A new list: l = 5 elements: {0,1,2,3,4}
Exception in thread "main" java.lang.IndexOutOfBoundsException
	at MyArrayList.remove(MyArrayList.java:135)
	at MyArrayList$MyIterator.remove(MyArrayList.java:249)
	at TestMyList.test(TestMyList.java:125)
	at TestMyList.main(TestMyList.java:15)
